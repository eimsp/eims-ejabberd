[{ejabberd, [{config, "conf/ejabberd.yml"},
  {log_path, "var/log/ejabberd/ejabberd.log"},
  {auth_eims_summary, ejabberd_auth_eims},
  {secret, "secret_from_hservice.com"},
  {migresia, [{rel_relative_dir, "priv/migrations/"}]}]},
 {ssl, [
%%        {versions, ['tlsv1.2']},
%%        {ciphers, ['ECDHE-ECDSA-AES256-GCM-SHA384', 'ECDHE-RSA-AES256-GCM-SHA384']},
%          {cacertfile, " /etc/letsencrypt/localhost.crt"},
%          {keyfile , "/etc/letsencrypt/localhost.key"},
%          {depth, 1},
          {verify, verify_none},
          {warn_verify_none, false},
          {tls_verify, false},
          {fail_if_no_peer_cert, false},
%        {dhfile, "/path/to/dhparams.pem"},
          {honor_cipher_order, true},
          {session_cache_size, 100000},
          {session_timeout, 86400000},
          {reuse_sessions, true}
      ]},
 {ebridgebot,
      [{test_path, "/Path/eims/ebridgebot"},
       {debug_info, false},
       {bots,%
          [#{bot_id => tg_bot,
            component => <<"tg.localhost">>,
            bot_name => <<"ebt_bot">>,
            host => <<"127.0.0.1">>,
            upload_host => <<"upload.localhost">>,
            upload_endpoint => <<"https://upload.localhost">>, %% url upload endpoint must be without port and not localhost
            nick => <<"Telegram">>,
            password => <<"secret">>,
            module => ebridgebot_tg,
            port => 8888,
            token => <<"TelegramToken">>,
            ignore_commands => true,
            format => #{usernick => bold, system => pre, reply => code},
            rooms => [{-1001403156281, #{jid => <<"public@conference.localhost">>}}]}]} %% optional #{password => <<"pwd">>} for xmpp muc
      %]}
    ]}
].

